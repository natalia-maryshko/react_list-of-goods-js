{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortField","setSortField","goodsReverse","setGoodsReverse","visibleGoods","goods","sortBy","isReverse","prepearedGoods","sort","good1","good2","localeCompare","length","reverse","sorted","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SA0BVC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EA3BO,SAACC,EAAOC,EAAQC,GAC7B,IAAIC,EAAc,YAAOH,GAoBzB,OAlBIC,GACFE,EAAeC,MAAK,SAACC,EAAOC,GAC1B,OAAQL,GACN,KAAKV,EACH,OAAOc,EAAME,cAAcD,GAC7B,KAAKd,EACH,OAAOa,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXN,IACFC,EAAiBA,EAAeM,WAG3BN,EAMcO,CAAOpB,EAAiBK,EAAWE,GAOxD,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMhB,EAAaL,IAC5BsB,KAAK,SACLF,UAAWG,IAAG,SAAU,UACtB,CAAE,WAAYnB,IAAcJ,IAJhC,iCASA,wBACEqB,QAAS,kBAAMhB,EAAaJ,IAC5BqB,KAAK,SACLF,UAAWG,IAAG,SAAU,aACtB,CAAE,WAAYnB,IAAcH,IAJhC,4BASA,wBACEoB,QAAS,kBAAMd,GAAiBD,IAChCgB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CAAE,YAAajB,IAHvD,sBAQEF,GAAaE,IACb,wBACEe,QAAS,kBAnCjBhB,EAAa,SACbE,GAAgB,IAmCRe,KAAK,SACLF,UAAU,4BAHZ,sBAWJ,6BACGZ,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC/FlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c368a3e4.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\n\nconst sorted = (goods, sortBy, isReverse) => {\n  let prepearedGoods = [...goods];\n\n  if (sortBy) {\n    prepearedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SORT_BY_ALPHABET:\n          return good1.localeCompare(good2);\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    prepearedGoods = prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n};\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [goodsReverse, setGoodsReverse] = useState(false);\n  const visibleGoods = sorted(goodsFromServer, sortField, goodsReverse);\n\n  const handleReset = () => {\n    setSortField('');\n    setGoodsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_BY_ALPHABET)}\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortField !== SORT_BY_ALPHABET })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-success',\n            { 'is-light': sortField !== SORT_BY_LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setGoodsReverse(!goodsReverse)}\n          type=\"button\"\n          className={cn('button', 'is-warning', { 'is-light': !goodsReverse })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || goodsReverse) && (\n          <button\n            onClick={() => handleReset()}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}